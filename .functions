# cria o diretório e entra nele
mkdircd() {
  mkdir "$1"
  cd "$1"
}

# transfer.sh function
# envia para o arquivo para o https://transfer.sh/arquivo
# https://github.com/dutchcoders/transfer.sh/
transfer() { if [ $# -eq 0 ]; then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; 
echo # added to break line in the end
} 

# gera uma senha aleatória
genpasswd() {
  local l=$1
  [ "$l" == "" ] && l=16
  tr -dc 'A-Za-z0-9_\{\}\[\]\(\)\\/^~?!@#$%&*`\-\+=,\ ' < /dev/urandom | head -c ${l} | xargs
}

# script ao iniciar os terminais
hello() {
  local TTY=`tty | sed 's/.*\([0-9]\+\)$/\1/'`

  case $TTY in
     0)
      echo "Hello world $USER!"
      git_update
      ;;
    1)
      htop -d 10 
      ;;
    2)
      ll
      ;;
    3)
      ll
      ;;
    4)
      ;;
    *)
      ;;
  esac  

  echo "tty $TTY"
} 

# atualiza meus principais repositórios ao iniciar
git_update() {
  echo "git pull scripts..."
  cd scripts
  git pull
  cd ../dotfiles
  echo "git pull dotfiles..."
  git pull
  cd ~
}

# procura pelo conteúdo de arquivos de uma extensão
#
# uso: grepext <busca> <extensao>
# exemplo: grepex class php
grepext() {

  if [ ! $# -eq 2 ]; then
    echo "uso: grepext <busca> <extensao>"
    return 1;
  fi

  grep -inE "$1" `find . -name "*.$2"`
}

# codifica string base64
base64encode() {

  echo "$1" | base64
}

# decodifica string base64
base64decode() {

  echo "$1" | base64 --decode
}

# gera um CPF sem . e - a partir do zzcpf
gencpf() {
  zzcpf $1 | tr -d '.-'
}

# gera um CNPJ sem . e - a partir do zzcnpj
gencnpj() {
  zzcnpj $1 | tr -d './-'
}
